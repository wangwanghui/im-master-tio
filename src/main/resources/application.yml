#server:
#  port: 9090
spring:
  servlet:
    multipart:
      # 单个文件大小
      max-file-size: 10MB
  messages:
    basename: i18n/messages
  profiles:
    active: dev
  # rabbitmq 配置
  rabbitmq:
    port: 5672
    host: 127.0.0.1
    username: guest
    password: guest
    #这个配置是保证提供者确保消息推送到交换机中，不管成不成功，都会回调
    publisher-confirm-type: correlated
    #保证交换机能把消息推送到队列中
    publisher-returns: true
    virtual-host: /
    #这个配置是保证消费者会消费消息，手动确认
    listener:
      simple:
        acknowledge-mode: manual
    template:
      mandatory: true
  #mogodb 配置
  data:
    mongodb:
      uri: mongodb://wang:123456@127.0.0.1:27017/octv_im_content?main?authSource=admin&authMechanism=SCRAM-SHA-1
#      host: 127.0.0.1
#      port: 27017
#      username: wang
#      password: 123456
#      database: octv_im_content
#      connectionTimeoutMs: 5000
#      readTimeoutMs: 15000
#      minConnectionsPerHost: 20
  # redis 配置
  redis:
    # 地址 127.0.0.1
    host: 127.0.0.1
    # 端口，默认为6379
    port: 6379
    # 密码 正式环境密码 octV@123
    password:
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池的最大数据库连接数
        max-active: 10
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms

# MyBatis配置
mybatis:
  # 搜索指定包别名
  typeAliasesPackage: com.octv.**.entity
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath:mybatisMapper/*.xml
  # 加载全局的配置文件
  configLocation: classpath:mybatisMapper/config/mybatis-config.xml

# 聊天服务配置
octv:
  im-chat-server:
    ssl:
      model: 0 #0 不走ssl 1 ssl 认证
      keystore: test
      truststore: test
      password: 0000
    port: 9326    # 服务监听端口
    offLine-message-limit: 1000 #离线消息限制   前1000条
    heat-beat-time:  60000 #心跳超时时间，单位：毫秒
    protocol-name: octv-im  #协议名字(可以随便取，主要用于开发人员辨识)
    upload-images-type: png, jpg, bmp, jpeg, gif #支持的图片上传类型
    upload-images-path: C:/Users/wsh/Desktop/test/
    open-cluster: false  #开启集群

